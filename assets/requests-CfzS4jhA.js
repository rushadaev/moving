import{$ as A,u as R,r as d,c as $}from"./index-Bu7963IN.js";const c="/api",E=A("requests",()=>{const n=R(),v=d([]),u=d(null),s=d(!1),a=d(""),o=$(()=>({Authorization:`Bearer ${n.token}`,Accept:"application/json","Content-Type":"application/json"}));async function i(){if(n.isAuthenticated){s.value=!0,a.value="";try{const e=await fetch(`${c}/v1/requests/user`,{headers:o.value});if(e.ok){const t=await e.json();v.value=t.data||[]}else a.value="Failed to fetch requests"}catch(e){a.value="Error fetching requests. Please try again.",console.error("Fetch requests error:",e)}finally{s.value=!1}}}function g(e){return(!e.addresses||!Array.isArray(e.addresses)||e.addresses.length===0)&&(console.warn("Request has no addresses, adding default addresses"),e.addresses=[{address:"Loading address not specified",type:"loading",order:0,latitude:40.7128,longitude:-74.006},{address:"Unloading address not specified",type:"unloading",order:1,latitude:40.7128,longitude:-74.006}]),(!e.materials||!Array.isArray(e.materials))&&(console.warn("Request has no materials, adding empty array"),e.materials=[]),e}async function h(e){if(!n.isAuthenticated)return null;s.value=!0,a.value="";try{console.log(`Fetching request with ID: ${e}`);const t=await fetch(`${c}/v1/requests/${e}`,{headers:o.value}),r=await t.json();return console.log("Request API response:",r),t.ok?r?(u.value=g(r),console.log("Request loaded successfully:",u.value),u.value):(console.error("API returned success but no data"),a.value="Received invalid data from server",null):(a.value=r.message||"Failed to fetch request details",console.error("API error:",r),null)}catch(t){return a.value="Error fetching request details. Please try again.",console.error("Get request by ID error:",t),null}finally{s.value=!1}}async function q(e){if(!n.isAuthenticated)return null;s.value=!0,a.value="";try{const t=await fetch(`${c}/v1/requests`,{method:"POST",headers:o.value,body:JSON.stringify(e)}),r=await t.json();return t.ok?(await i(),r):(a.value=r.message||"Failed to create request",null)}catch(t){return a.value="Error creating request. Please try again.",console.error("Create request error:",t),null}finally{s.value=!1}}async function f(e,t){var r;if(!n.isAuthenticated)return null;s.value=!0,a.value="";try{const l=await fetch(`${c}/v1/requests/${e}`,{method:"PUT",headers:o.value,body:JSON.stringify(t)}),y=await l.json();return l.ok?(await i(),((r=u.value)==null?void 0:r.id)===e&&await h(e),y):(a.value=y.message||"Failed to update request",null)}catch(l){return a.value="Error updating request. Please try again.",console.error("Update request error:",l),null}finally{s.value=!1}}async function p(e,t){return console.log(`Updating request ${e} status to: ${t}`),f(e,{status:t})}async function w(e,t){return f(e,{movers_count:t})}async function m(e){var t;if(!n.isAuthenticated)return!1;s.value=!0,a.value="";try{const r=await fetch(`${c}/v1/requests/${e}`,{method:"DELETE",headers:o.value});if(r.ok)return await i(),((t=u.value)==null?void 0:t.id)===e&&(u.value=null),!0;{const l=await r.json();return a.value=l.message||"Failed to delete request",!1}}catch(r){return a.value="Error deleting request. Please try again.",console.error("Delete request error:",r),!1}finally{s.value=!1}}return n.isAuthenticated&&i(),{requests:v,selectedRequest:u,loading:s,error:a,fetchRequests:i,getRequestById:h,createRequest:q,updateRequest:f,updateRequestStatus:p,updateMoversCount:w,deleteRequest:m}});export{E as u};
