version: '3.9'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: sh -c "npm run build && cp -r dist/* /var/www/frontend/"
    volumes:
      - frontend_dist:/var/www/frontend
    environment:
      - NODE_ENV=production
      - VITE_APP_NAME=${VITE_APP_NAME}
      - VITE_API_URL=${VITE_API_URL}
      - VITE_GOOGLE_MAPS_API_KEY=${VITE_GOOGLE_MAPS_API_KEY}
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: moving-nginx-1
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/prod.conf:/etc/nginx/conf.d/default.conf
      - frontend_dist:/var/www/frontend
      - ./backend/public:/var/www/backend
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
      - backend_vendor:/var/www/html/vendor
    environment:
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG}
      - APP_URL=${APP_URL}
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DOCKER_MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  frontend_dist:
  backend_vendor:
